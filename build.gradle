plugins {
    id "java"
    id "io.quarkus"
    id "jacoco"
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation "io.quarkus:quarkus-resteasy-reactive"
    implementation "io.quarkus:quarkus-jaxrs-client-reactive"
    implementation "io.quarkus:quarkus-resteasy-reactive-jackson"
    implementation "io.quarkus:quarkus-rest-client-reactive-jackson"
    implementation "io.quarkus:quarkus-arc"
    implementation "io.quarkus:quarkus-config-yaml"

    implementation("org.projectlombok:lombok:${lombokVersion}")
    implementation("com.squareup.okhttp3:okhttp:${okHttpVersion}") {
        force = true
    }
    implementation("com.squareup.okio:okio:${okioVersion}") {
        force = true
    }

    implementation("com.commercetools.sdk:commercetools-http-client:${ctVersion}")
    implementation("com.commercetools.sdk:commercetools-sdk-java-api:${ctVersion}")
    implementation("com.commercetools.sdk:commercetools-sdk-java-importapi:${ctVersion}")
    implementation("com.commercetools.sdk:commercetools-sdk-java-ml:${ctVersion}")

    testImplementation "io.quarkus:quarkus-junit5"
    testImplementation "io.rest-assured:rest-assured"
    testImplementation "org.mockito:mockito-junit-jupiter:${mockitoVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${paramsVersion}"
}

group "com.e2x"
version applicationVersion

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

compileJava {
    options.encoding = "UTF-8"
    options.compilerArgs << "-parameters"
}

compileTestJava {
    options.encoding = "UTF-8"
}

test {
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = false
        csv.required = false
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "**/config/*",
                    "**/model/*",
                    "**/*Mapper.class",
                    "**/*Request.class",
                    "com/e2x/klarnact/commercetools/client/CtClient.class"
            ])
        }))
    }
}

